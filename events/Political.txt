###########################
# Political Events
###########################
# By Kallar, Nijato, Sir Rogers, Zankoas and ~mw~
###########################

add_namespace = kr.political

####################################
### AI Event Fired At Game Start ###
####################################

country_event = {
	id = kr.political.10

	hidden = yes
	is_triggered_only = yes
	fire_only_once = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.10"

		### Setup Ambition Areas for Peace Conferences ###

		create_ambition_areas = yes

		### Kill Cores that are Auto Added ###

		NIC = {
			remove_state_core = 1071
		}
		BHC = {
			remove_state_core = 858
		}

	}
}

########################################
### Force Minister Setup for Puppets ###
########################################

country_event = {
	id = kr.political.12

	hidden = yes
	is_triggered_only = yes

	trigger = {
		has_autonomy_state = kr_occupied_puppet # Not all puppets since that usually entails unintended tags
		is_ai = yes
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.12"
		remove_all_ministers = yes
		set_puppet_minister = yes
	}

}

###########################
### Introduction Events ###
###########################

country_event = { #Intro Event
	id = kr.political.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.1" }
	title = kr.political.1.t
	desc = kr.political.1.d
	picture = GFX_report_event_AUS_Viktor_Adler
	#picture = GFX_introduction_main

	is_triggered_only = yes

	option = {
		name = kr.political.1.a
		#country_event = kr.political.26
	}

	#option = {
	#	name = kr.political.24.c #Q&A
	#	trigger = {
	#		has_global_flag = is_not_mp
	#	}
	#	add_political_power = 10
	#	ROOT = {
	#		country_event = kr.political.25
	#	}
	#}
}

#################################################
### Setting up Opinion Modifiers at Gamestart ###
#################################################

country_event = {
	id = kr.political.40

	hidden = yes

	is_triggered_only = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.40"
		if = {
			limit = {
				has_socialist_government = yes
			}
			set_country_flag = KR_has_socialist_government
			every_country = {
				limit = {
					has_socialist_government = yes
					NOT = {
						has_same_government_as_ROOT = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
			}
			every_country = {
				limit = {
					OR = {
						has_democratic_government = yes
						has_dictatorship_government = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
			}
		}
		if = {
			limit = {
				has_democratic_government = yes
			}
			every_country = {
				limit = {
					has_democratic_government = yes
					NOT = {
						has_same_government_as_ROOT = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
			}
			every_country = {
				limit = {
					OR = {
						has_socialist_government = yes
						has_dictatorship_government = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
			}
		}
		if = {
			limit = {
				has_dictatorship_government = yes
			}
			every_country = {
				limit = {
					has_dictatorship_government = yes
					NOT = {
						has_same_government_as_ROOT = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
			}
			every_country = {
				limit = {
					OR = {
						has_democratic_government = yes
						has_socialist_government = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
			}
		}
		every_country = {
			limit = {
				has_same_government_as_ROOT = yes
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_same_ideology
			}
		}
	}

}

#########################################################
### Setting up Opinion Modifiers on Government Change ###
#########################################################

country_event = {
	id = kr.political.41

	hidden = yes

	is_triggered_only = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.41"
		every_country = {
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_similar_ideology
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_similar_ideology
				}
			}
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_different_ideology
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_different_ideology
				}
			}
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_same_ideology
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_same_ideology
				}
			}
		}
		if = {
			limit = {
				has_socialist_government = yes
			}
			every_country = {
				limit = {
					has_socialist_government = yes
					NOT = {
						has_same_government_as_ROOT = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
				reverse_add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
			}
			every_country = {
				limit = {
					OR = {
						has_democratic_government = yes
						has_dictatorship_government = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
				reverse_add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
			}
		}
		if = {
			limit = {
				has_democratic_government = yes
			}
			every_country = {
				limit = {
					has_democratic_government = yes
					NOT = {
						has_same_government_as_ROOT = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
				reverse_add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
			}
			every_country = {
				limit = {
					OR = {
						has_socialist_government = yes
						has_dictatorship_government = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
				reverse_add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
			}
		}
		if = {
			limit = {
				has_dictatorship_government = yes
			}
			every_country = {
				limit = {
					has_dictatorship_government = yes
					NOT = {
						has_same_government_as_ROOT = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
				reverse_add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
			}
			every_country = {
				limit = {
					OR = {
						has_democratic_government = yes
						has_socialist_government = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
				reverse_add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
			}
		}
		every_country = {
			limit = {
				has_same_government_as_ROOT = yes
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_same_ideology
			}
			reverse_add_opinion_modifier = {
				target = ROOT
				modifier = KR_same_ideology
			}
		}
	}

}

######################################
### Setting up Factional Rivalries ###
######################################

country_event = {
	id = kr.political.50
	hidden = yes
	is_triggered_only = yes

	trigger = {
		is_ally_with = GER
		NOT = { has_variable = GER_faction }
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.50"
		every_other_country = {
			limit = {
				OR = {
					is_ally_with = ENT
					is_ally_with = INT
				}
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
		}
		set_variable = { GER_faction = 1 }
	}
}

country_event = {
	id = kr.political.51
	hidden = yes
	is_triggered_only = yes

	trigger = {
		has_variable = GER_faction
		NOT = { is_ally_with = GER }
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.51"
		every_other_country = {
			limit = {
				OR = {
					is_ally_with = ENT
					is_ally_with = INT
				}
			}
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_factional_rivalry
				}
			}
		}
		clear_variable = GER_faction
	}
}

country_event = {
	id = kr.political.52
	hidden = yes
	is_triggered_only = yes

	trigger = {
		is_ally_with = ENT
		NOT = { has_variable = ENT_faction }
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.52"
		every_other_country = {
			limit = {
				OR = {
					is_ally_with = GER
					is_ally_with = INT
				}
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
		}
		set_variable = { ENT_faction = 1 }
	}
}

country_event = {
	id = kr.political.53
	hidden = yes
	is_triggered_only = yes

	trigger = {
		has_variable = ENT_faction
		NOT = { is_ally_with = ENT }
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.53"
		every_other_country = {
			limit = {
				OR = {
					is_ally_with = GER
					is_ally_with = INT
				}
			}
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_factional_rivalry
				}
			}
		}
		clear_variable = ENT_faction
	}
}

country_event = {
	id = kr.political.54
	hidden = yes
	is_triggered_only = yes

	trigger = {
		is_ally_with = INT
		NOT = { has_variable = INT_faction }
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.54"
		every_other_country = {
			limit = {
				OR = {
					is_ally_with = GER
					is_ally_with = ENT
				}
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
		}
		set_variable = { INT_faction = 1 }
	}
}

country_event = {
	id = kr.political.55
	hidden = yes
	is_triggered_only = yes

	trigger = {
		has_variable = INT_faction
		NOT = { is_ally_with = INT }
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.55"
		every_other_country = {
			limit = {
				OR = {
					is_ally_with = GER
					is_ally_with = ENT
				}
			}
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_factional_rivalry
				}
			}
		}
		clear_variable = INT_faction
	}
}

#################################
### Returning Cores to Allies ###
#################################

# Which cores to return?
country_event = {
	id = kr.political.75
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.75" }
	title = kr.political.75.t
	desc = kr.political.75.d
	picture = GFX_report_event_generic_diplomacy2

	is_triggered_only = yes

	option = {
		name = kr.political.75.a #return all land
		ai_chance = {
			factor = 1
		}
		clr_country_flag = KR_returning_land
		custom_effect_tooltip = KR_will_return_all
		hidden_effect = {
			event_target:return_to = {
				country_event = kr.political.76
			}
		}
	}
	option = {
		name = kr.political.75.b #return all land but vital provinces
		trigger = {
			any_owned_state = {
				is_controlled_by = ROOT
				is_claim_or_core_of_ROOT = no
				is_important_state = yes
				NOT = { has_state_flag = KR_keeping_state@ROOT }
				if = {
					limit = {
						ROOT = { tag = JAP }
						is_china_claim_of_JAP = yes
					}
					NOT = { has_variable = ambition_area_@ROOT }
				}
				OR = {
					NOT = { has_variable = ambition_area_@ROOT }
					AND = {
						ROOT = { tag = CAN }
						is_british_colonial_claim = yes
					}
					AND = {
						ROOT = { tag = ENG }
						is_british_colonial_claim = yes
					}
					AND = {
						ROOT = { tag = GBR }
						is_british_colonial_claim = yes
					}
					AND = {
						ROOT = { tag = FRA }
						is_french_colonial_claim = yes
					}
					AND = {
						ROOT = { tag = JAP }
						event_target:return_to = { tag = TRM }
						OR = {
							state = 408 #Vladivostok
							state = 409 #Khabarovsk
							state = 560 #Nikolayevsk
							state = 562 #Okhotsk
							state = 637 #Kamchatka
						}
					}
					AND = {
						ROOT = { tag = JAP }
						OR = {
							region = 194 #Malay Peninsula
							region = 91 #Arafura Sea
							region = 93 #Java Sea
							region = 158 #Sunda Islands
							region = 159 #Borneo
							region = 167 #New Guinea
							region = 192 #Sumatra
						}
					}
					AND = {
						ROOT = { tag = NFA }
						is_french_colonial_claim = yes
					}
					ROOT = { is_ai = no }
				}
				OR = {
					is_core_of = event_target:return_to
					is_claimed_by = event_target:return_to
				}
			}
		}
		ai_chance = {
			factor = 100
		}
		custom_effect_tooltip = KR_will_return_rest
		hidden_effect = {
			clr_country_flag = KR_returning_land
			every_owned_state = {
				limit = {
					is_controlled_by = ROOT
					is_claim_or_core_of_ROOT = no
					is_important_state = yes
					NOT = { has_state_flag = KR_keeping_state@ROOT }
					if = {
						limit = {
							ROOT = { tag = JAP }
							is_china_claim_of_JAP = yes
						}
						NOT = { has_variable = ambition_area_@ROOT }
					}
					OR = {
						NOT = { has_variable = ambition_area_@ROOT }
						AND = {
							ROOT = { tag = CAN }
							is_british_colonial_claim = yes
						}
						AND = {
							ROOT = { tag = ENG }
							is_british_colonial_claim = yes
						}
						AND = {
							ROOT = { tag = GBR }
							is_british_colonial_claim = yes
						}
						AND = {
							ROOT = { tag = FRA }
							is_french_colonial_claim = yes
						}
						AND = {
							ROOT = { tag = JAP }
							event_target:return_to = { tag = TRM }
							OR = {
								state = 408 #Vladivostok
								state = 409 #Khabarovsk
								state = 560 #Nikolayevsk
								state = 562 #Okhotsk
								state = 637 #Kamchatka
							}
						}
						AND = {
							ROOT = { tag = JAP }
							OR = {
								region = 194 #Malay Peninsula
								region = 91 #Arafura Sea
								region = 93 #Java Sea
								region = 158 #Sunda Islands
								region = 159 #Borneo
								region = 167 #New Guinea
								region = 192 #Sumatra
							}
						}
						AND = {
							ROOT = { tag = NFA }
							is_french_colonial_claim = yes
						}
						ROOT = { is_ai = no }
					}
					OR = {
						is_core_of = event_target:return_to
						is_claimed_by = event_target:return_to
					}
				}
				set_state_flag = KR_keeping_state@ROOT
			}
			if = {
				limit = {
					any_owned_state = {
						is_controlled_by = ROOT
						is_claim_or_core_of_ROOT = no
						is_important_state = no
						NOT = { has_state_flag = KR_keeping_state@ROOT }
						if = {
							limit = {
								ROOT = { tag = JAP }
								is_china_claim_of_JAP = yes
							}
							NOT = { has_variable = ambition_area_@ROOT }
						}
						OR = {
							NOT = { has_variable = ambition_area_@ROOT }
							AND = {
								ROOT = { tag = CAN }
								is_british_colonial_claim = yes
							}
							AND = {
								ROOT = { tag = ENG }
								is_british_colonial_claim = yes
							}
							AND = {
								ROOT = { tag = GBR }
								is_british_colonial_claim = yes
							}
							AND = {
								ROOT = { tag = FRA }
								is_french_colonial_claim = yes
							}
							AND = {
								ROOT = { tag = JAP }
								event_target:return_to = { tag = TRM }
								OR = {
									state = 408 #Vladivostok
									state = 409 #Khabarovsk
									state = 560 #Nikolayevsk
									state = 562 #Okhotsk
									state = 637 #Kamchatka
								}
							}
							AND = {
								ROOT = { tag = JAP }
								OR = {
									region = 194 #Malay Peninsula
									region = 91 #Arafura Sea
									region = 93 #Java Sea
									region = 158 #Sunda Islands
									region = 159 #Borneo
									region = 167 #New Guinea
									region = 192 #Sumatra
								}
							}
							AND = {
								ROOT = { tag = NFA }
								is_french_colonial_claim = yes
							}
							ROOT = { is_ai = no }
						}
						OR = {
							is_core_of = event_target:return_to
							is_claimed_by = event_target:return_to
						}
					}
				}
				event_target:return_to = {
					country_event = kr.political.76
				}
			}
		}
	}
	option = {
		name = kr.political.75.c #return cores only
		trigger = {
			is_ai = no
			any_owned_state = {
				is_controlled_by = ROOT
				is_claim_or_core_of_ROOT = no
				is_important_state = no
				NOT = { has_state_flag = KR_keeping_state@ROOT 	}
				is_core_of = event_target:return_to
			}
			any_owned_state = {
				is_controlled_by = ROOT
				is_claim_or_core_of_ROOT = no
				is_important_state = no
				NOT = { has_state_flag = KR_keeping_state@ROOT 	}
				NOT = { is_core_of = event_target:return_to }
				is_claimed_by = event_target:return_to
			}
		}
		custom_effect_tooltip = KR_will_return_cores
		hidden_effect = {
			clr_country_flag = KR_returning_land
			every_owned_state = {
				limit = {
					is_controlled_by = ROOT
					is_claim_or_core_of_ROOT = no
					NOT = { has_state_flag = KR_keeping_state@ROOT }
					NOT = { is_core_of = event_target:return_to }
					is_claimed_by = event_target:return_to
				}
				set_state_flag = KR_keeping_state@ROOT
			}
			event_target:return_to = {
				country_event = kr.political.76
			}
		}
	}
	option = {
		name = kr.political.75.e #keep it all you pig
		trigger = {
			is_ai = no
		}
		clr_country_flag = KR_returning_land
		custom_effect_tooltip = KR_will_not_return
		hidden_effect = {
			every_owned_state = {
				limit = {
					is_controlled_by = ROOT
					OR = {
						is_core_of = event_target:return_to
						is_claimed_by = event_target:return_to
					}
					is_claim_or_core_of_ROOT = no
					OR = {
						any_neighbor_state = { is_owned_by = event_target:return_to }
						is_coastal = yes
					}
					NOT = { has_state_flag = KR_keeping_state@ROOT }
				}
				set_state_flag = KR_keeping_state@ROOT
			}
		}
	}
}

# Cores/claims have been returned by an ally
country_event = {
	id = kr.political.76
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.76" }
	title = kr.political.76.t
	desc = kr.political.76.d
	picture = GFX_report_event_generic_diplomacy2

	is_triggered_only = yes

	option = {
		name = kr.political.76.a
		add_opinion_modifier = {
			target = FROM
			modifier = KR_returned_land
		}
		FROM = {
			every_owned_state = {
				limit = {
					is_controlled_by = FROM
					OR = {
						any_neighbor_state = { is_owned_by = ROOT }
						is_coastal = yes
					}
					is_claim_or_core_of_ROOT = yes
					if = {
						limit = {
							FROM = { tag = JAP }
							is_china_claim_of_JAP = yes
						}
						NOT = { has_variable = ambition_area_@JAP }
					}
					OR = {
						NOT = { has_variable = ambition_area_@FROM }
						AND = {
							FROM = { tag = CAN }
							is_british_colonial_claim = yes
						}
						AND = {
							FROM = { tag = ENG }
							is_british_colonial_claim = yes
						}
						AND = {
							FROM = { tag = GBR }
							is_british_colonial_claim = yes
						}
						AND = {
							FROM = { tag = FRA }
							is_french_colonial_claim = yes
						}
						AND = {
							FROM = { tag = JAP }
							ROOT = { tag = TRM }
							OR = {
								state = 408 #Vladivostok
								state = 409 #Khabarovsk
								state = 560 #Nikolayevsk
								state = 562 #Okhotsk
								state = 637 #Kamchatka
							}
						}
						AND = {
							FROM = { tag = JAP }
							OR = {
								region = 194 #Malay Peninsula
								region = 91 #Arafura Sea
								region = 93 #Java Sea
								region = 158 #Sunda Islands
								region = 159 #Borneo
								region = 167 #New Guinea
								region = 192 #Sumatra
							}
						}
						AND = {
							FROM = { tag = NFA }
							is_french_colonial_claim = yes
						}
						FROM = { is_ai = no }
					}
					NOT = {
						has_state_flag = KR_keeping_state@FROM
						is_core_of = FROM
						is_claimed_by = FROM
					}
				}
				ROOT = {
					transfer_state = PREV
				}
			}
		}
	}
}

# Checking whether a country should be exiled but isn't
country_event = {
	id = kr.political.80

	is_triggered_only = yes
	hidden = yes

	trigger = {
		exists = yes
		has_capitulated = yes
		has_war = yes
		OR = {
			is_in_faction = yes
			is_subject = yes
		}
		OR = {
			is_government_in_exile = no
			AND = {
				is_government_in_exile = yes
				var:host = {
					has_capitulated = yes
				}
			}
		}
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.80"
		if = {
			limit = {
				is_subject = yes
				overlord = { has_capitulated = no }
			}
			overlord = {
				ROOT = {
					become_exiled_in = { target = PREV legitimacy = 50 }
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					tag = GER
					tag = GEX
					tag = AUS
					tag = FRA
					tag = ENG
					tag = CAN
					tag = GBR
					tag = NFA
					tag = RUS
					tag = SOV
					tag = JAP
					tag = USA
					tag = CSA
					tag = TEX
					tag = CAL
				}
				is_in_faction = yes
				var:faction_leader = {
					has_capitulated = no
				}
			}
			random_country = {
				limit = {
					is_in_faction_with = ROOT
					is_faction_leader = yes
				}
				ROOT = {
					become_exiled_in = { target = PREV legitimacy = 100 }
				}
			}
		}
		else_if = {
			limit = {
				is_in_faction = yes
				var:faction_leader = {
					has_capitulated = no
				}
			}
			random_country = {
				limit = {
					is_in_faction_with = ROOT
					is_faction_leader = yes
				}
				ROOT = {
					become_exiled_in = { target = PREV legitimacy = 50 }
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					tag = GER
					tag = GEX
					tag = AUS
					tag = FRA
					tag = ENG
					tag = CAN
					tag = GBR
					tag = NFA
					tag = RUS
					tag = SOV
					tag = JAP
					tag = USA
					tag = CSA
					tag = TEX
					tag = CAL
				}
				is_in_faction = yes
				any_allied_country = {
					is_in_faction_with = ROOT
					same_government_type_as_ROOT = yes
					has_capitulated = no
					is_actual_major = yes
				}
			}
			random_country = {
				limit = {
					is_in_faction_with = ROOT
					same_government_type_as_ROOT = yes
					has_capitulated = no
					is_actual_major = yes
				}
				ROOT = {
					become_exiled_in = { target = PREV legitimacy = 100 }
				}
			}
		}
		else_if = {
			limit = {
				is_in_faction = yes
				any_allied_country = {
					is_in_faction_with = ROOT
					same_government_type_as_ROOT = yes
					has_capitulated = no
					is_actual_major = yes
				}
			}
			random_country = {
				limit = {
					is_in_faction_with = ROOT
					same_government_type_as_ROOT = yes
					has_capitulated = no
					is_actual_major = yes
				}
				ROOT = {
					become_exiled_in = { target = PREV legitimacy = 50 }
				}
			}
		}
	}
}

##################################
### Tag Switch to Puppet Event ###
##################################
#
# current disabled
# should you want to enable it, first uncomment this event (duh)
# then add this after the puppet command in the annexation events you want it to fire in:
# TAG = { save_global_event_target_as = change_tag_target }
# country_event = kr.political.2
# where TAG is the tag that has just been puppeted you will switch to after
#
#country_event = {
#	id = kr.political.2
#	title = kr.political.2.t
#	desc = kr.political.2.d
#	picture = GFX_report_event_generic_diplomacy3
#
#	is_triggered_only = yes
#
#	option = {
#		name = kr.political.2.a #Stay as main tag
#		clear_global_event_target = change_tag_target
#	}
#
#	option = {
#		name = kr.political.2.b #Change to puppet tag
#		event_target:change_tag_target = {
#			change_tag_from = ROOT
#		}
#		clear_global_event_target = change_tag_target
#	}
#}

##################################
### 	  Puppet Events 	   ###
##################################

# There are five main puppet levels:
#  1. Integrated Puppet (kr_integrated_puppet) - the lowest, and countries normally can't raise above this if set here
#  2. Occupied Puppet (kr_occupied_puppet) - the default state, countries will be able to raise to the next level once they get some military, based on their size
#  3. Puppet (kr_default_puppet) - the equivalent to the old colony level, only majors can generally raise higher than this on their own
#	4. Autonomous Puppet (kr_autonomous_puppet) - the equivalent to the old dominion level, only more majors can raise higher than this on their own
#	5. Nominal Puppet (kr_nominal_puppet) - a puppet in name only, barely restricted, majors can eventually move to freedom from this level
#
# NOTE: Currently there is no system in place for moving autonomy back downwards
#

# Occupied Puppet moves to Puppet level once they've established a military
country_event = {
	id = kr.political.100
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.100" }
	title = kr.political.100.t
	desc = kr.political.100.d
	picture = GFX_report_event_generic_diplomacy4

	trigger = {
		is_subject = yes
		has_autonomy_state = kr_occupied_puppet
		has_political_power > 0
		has_stability > 0.25

		set_temp_variable = { numunits = ROOT.owned_states }
		clamp_temp_variable = { var = numunits max = 25 min = 1 }
		check_variable = {
			var = num_armies
			value = numunits
			compare = greater_than_or_equals
		}

		NOT = {
			tag = GEA
			tag = MAF
			has_country_flag = KR_can_raise_autonomy_level
		}
	}

	mean_time_to_happen = {
		months = 3
		modifier = {
			factor = 0.5
			has_stability > 0.5
		}
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.100"
		set_country_flag = KR_can_raise_autonomy_level
		overlord = {
			save_event_target_as = overlord_name
		}
	}

	option = {
		name = kr.political.100.a
		get_current_government_type = yes
		overlord = {
			set_autonomy = {
				target = ROOT
				autonomy_state = kr_default_puppet
			}
			hidden_effect = {
				country_event = kr.political.101
			}
		}
		restore_previous_government_type = yes
		clr_country_flag = KR_can_raise_autonomy_level
	}
}

country_event = {
	id = kr.political.101
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.101" }
	title = kr.political.101.t
	desc = kr.political.101.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		name = kr.political.101.a
		custom_effect_tooltip = FROM_becomes_puppet
	}
}

# Puppet who is powerful enough moves to Autonomous Puppet
country_event = {
	id = kr.political.102
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.102" }
	title = kr.political.102.t
	picture = GFX_report_event_generic_diplomacy4

	desc = {
		text = kr.political.102.d.tfv
		trigger = { has_dlc = "Together for Victory" }
	}
	desc = {
		text = kr.political.102.d
		trigger = { NOT = { has_dlc = "Together for Victory" } }
	}

	trigger = {
		is_subject = yes
		has_autonomy_state = kr_default_puppet
		has_war = no
		has_political_power > 0
		has_stability > 0.50
		has_army_manpower = { size > 100000 }
		NOT = {
			tag = GEA
			tag = MAF
			has_country_flag = KR_can_raise_autonomy_level
			overlord = {
				strength_ratio = { tag = ROOT ratio > 3.0 }
			}
		}
	}

	mean_time_to_happen = {
		months = 24
		modifier = {
			factor = 0.5
			overlord = { has_elected_government = yes }
		}
		modifier = {
			factor = 1.5
			overlord = {
				OR = {
					has_authoritarian_government = yes
					has_government = totalist
				}
			}
		}
		modifier = {
			factor = 0.8
			overlord = {
				strength_ratio = { tag = ROOT ratio < 2.0 }
			}
		}
		modifier = {
			factor = 0.8
			overlord = {
				strength_ratio = { tag = ROOT ratio < 1.5 }
			}
		}
		modifier = {
			factor = 0.5
			overlord = {
				strength_ratio = { tag = ROOT ratio < 1.0 }
			}
		}
		modifier = {
			factor = 0.5
			overlord = {
				strength_ratio = { tag = ROOT ratio < 0.75 }
			}
		}
		modifier = {
			factor = 0.5
			has_stability > 0.75
		}
	}

	immediate = {
		set_country_flag = KR_can_raise_autonomy_level
		overlord = {
			save_event_target_as = overlord_name
		}
	}

	option = {
		name = kr.political.102.a
		if = {
			limit = { has_dlc = "Together for Victory" }
			custom_effect_tooltip = may_raise_autonomy
			add_autonomy_ratio = {
				value = 0.25
				localization = clamour_for_autonomy
			}
		}
		else = {
			get_current_government_type = yes
			overlord = {
				set_autonomy = {
					target = ROOT
					autonomy_state = kr_autonomous_puppet
				}
				hidden_effect = {
					country_event = kr.political.103
				}
			}
			restore_previous_government_type = yes
			clr_country_flag = KR_can_raise_autonomy_level
		}
	}
}

country_event = {
	id = kr.political.103
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.103" }
	title = kr.political.103.t
	desc = kr.political.103.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		name = kr.political.101.a
		custom_effect_tooltip = FROM_becomes_autonomous_puppet
	}
}

# Autonomous Puppet who is a major moves to Nominal Puppet
country_event = {
	id = kr.political.104
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.104" }
	title = kr.political.102.t
	picture = GFX_report_event_generic_diplomacy4

	desc = {
		text = kr.political.102.d.tfv
		trigger = { has_dlc = "Together for Victory" }
	}
	desc = {
		text = kr.political.102.d
		trigger = { NOT = { has_dlc = "Together for Victory" } }
	}

	trigger = {
		is_subject = yes
		has_autonomy_state = kr_autonomous_puppet
		has_war = no
		has_political_power > 0
		has_stability > 0.70
		has_army_manpower = { size > 100000 }
		OR = {
			AND = {
				num_of_factories > 49
				date < 1940.1.1
			}
			AND = {
				num_of_factories > 74
				NOT = { date < 1940.1.1 }
				date < 1942.1.1
			}
			AND = {
				num_of_factories > 99
				NOT = { date < 1942.1.1 }
				date < 1944.1.1
			}
			AND = {
				num_of_factories > 124
				NOT = { date < 1944.1.1 }
				date < 1946.1.1
			}
			num_of_factories > 149
		}
		NOT = {
			tag = GEA
			tag = MAF
			has_country_flag = KR_can_raise_autonomy_level
			overlord = {
				strength_ratio = { tag = ROOT ratio > 3.0 }
			}
		}
	}

	mean_time_to_happen = {
		months = 36
		modifier = {
			factor = 0.5
			overlord = { has_elected_government = yes }
		}
		modifier = {
			factor = 1.5
			overlord = {
				OR = {
					has_authoritarian_government = yes
					has_government = totalist
				}
			}
		}
		modifier = {
			factor = 0.8
			overlord = {
				strength_ratio = { tag = ROOT ratio < 2.0 }
			}
		}
		modifier = {
			factor = 0.8
			overlord = {
				strength_ratio = { tag = ROOT ratio < 1.5 }
			}
		}
		modifier = {
			factor = 0.5
			overlord = {
				strength_ratio = { tag = ROOT ratio < 1.0 }
			}
		}
		modifier = {
			factor = 0.5
			overlord = {
				strength_ratio = { tag = ROOT ratio < 0.75 }
			}
		}
		modifier = {
			factor = 0.8
			has_stability > 0.80
		}
	}

	immediate = {
		set_country_flag = KR_can_raise_autonomy_level
		overlord = {
			save_event_target_as = overlord_name
		}
	}

	option = {
		name = kr.political.102.a
		if = {
			limit = { has_dlc = "Together for Victory" }
			custom_effect_tooltip = may_raise_autonomy
			add_autonomy_ratio = {
				value = 0.25
				localization = clamour_for_autonomy
			}
		}
		else = {
			get_current_government_type = yes
			overlord = {
				set_autonomy = {
					target = ROOT
					autonomy_state = kr_nominal_puppet
				}
				hidden_effect = {
					country_event = kr.political.105
				}
			}
			restore_previous_government_type = yes
			clr_country_flag = KR_can_raise_autonomy_level
		}
	}
}

country_event = {
	id = kr.political.105
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.105" }
	title = kr.political.103.t
	desc = kr.political.103.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		name = kr.political.103.a
		custom_effect_tooltip = FROM_becomes_nominal_puppet
	}
}

# Nominal Puppet who is a major can become free
country_event = {
	id = kr.political.106
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.106" }
	title = kr.political.106.t
	picture = GFX_report_event_generic_diplomacy4

	desc = {
		text = kr.political.106.d.tfv
		trigger = { has_dlc = "Together for Victory" }
	}
	desc = {
		text = kr.political.106.d
		trigger = { NOT = { has_dlc = "Together for Victory" } }
	}

	trigger = {
		is_subject = yes
		has_autonomy_state = kr_nominal_puppet
		is_actual_major = yes
		has_war = no
		has_political_power > 0
		has_stability > 0.70
		has_army_manpower = { size > 100000 }
		NOT = {
			tag = GEA
			tag = MAF
			has_country_flag = KR_can_become_free
			overlord = {
				strength_ratio = { tag = ROOT ratio > 3.0 }
			}
		}
	}

	mean_time_to_happen = {
		months = 36
		modifier = {
			factor = 0.5
			overlord = { has_elected_government = yes }
		}
		modifier = {
			factor = 1.5
			overlord = {
				OR = {
					has_authoritarian_government = yes
					has_government = totalist
				}
			}
		}
		modifier = {
			factor = 0.8
			overlord = {
				strength_ratio = { tag = ROOT ratio < 2.0 }
			}
		}
		modifier = {
			factor = 0.8
			overlord = {
				strength_ratio = { tag = ROOT ratio < 1.5 }
			}
		}
		modifier = {
			factor = 0.5
			overlord = {
				strength_ratio = { tag = ROOT ratio < 1.0 }
			}
		}
		modifier = {
			factor = 0.5
			overlord = {
				strength_ratio = { tag = ROOT ratio < 0.75 }
			}
		}
		modifier = {
			factor = 0.8
			has_stability > 0.80
		}
	}

	immediate = {
		set_country_flag = KR_can_become_free
		overlord = {
			save_event_target_as = overlord_name
		}
	}

	option = {
		name = kr.political.106.a
		trigger = { has_dlc = "Together for Victory" }
		custom_effect_tooltip = may_become_free
		add_autonomy_ratio = {
			value = 0.25
			localization = clamour_for_independence
		}
	}
	option = {
		name = kr.political.106.b # Demand independence
		trigger = {
			NOT = { has_dlc = "Together for Victory" }
		}
		overlord = {
			country_event = kr.political.107
		}
	}
	option = {
		name = kr.political.106.c # Leave it be
		trigger = {
			NOT = { has_dlc = "Together for Victory" }
			is_ai = no
		}
		add_stability = -0.10
	}
}

country_event = {
	id = kr.political.107
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.107" }
	title = kr.political.107.t
	desc = kr.political.107.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		name = kr.political.107.a #Agree
		add_opinion_modifier = { target = FROM modifier = KR_close_allies }
		FROM = {
			clr_country_flag = KR_can_become_free
			add_opinion_modifier = { target = ROOT modifier = KR_close_allies }
		}
		set_autonomy = {
			target = FROM
			autonomy_state = autonomy_free
		}
	}
	option = {
		name = kr.political.107.b #Refuse
		trigger = { is_ai = no }
		FROM = {
			add_opinion_modifier = { target = ROOT modifier = KR_outraged }
			country_event = kr.political.107
		}
	}
}

country_event = {
	id = kr.political.108
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.108" }
	title = kr.political.108.t
	desc = kr.political.108.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		name = kr.political.108.a
		clr_country_flag = KR_can_become_free
		set_country_flag = KR_independence_refused
		add_war_support = 0.10
		unlock_decision_tooltip = KR_fight_for_independence
	}
}

# Puppet declares themselves free
country_event = {
	id = kr.political.109
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.109" }
	title = kr.political.109.t
	desc = kr.political.109.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		name = kr.political.109.a #Let them go
		add_political_power = -50
	}
	option = {
		name = kr.political.109.b #Fight
		trigger = { is_ai = no }
		declare_war_on = {
			target = FROM
			type = annex_everything
		}
		set_country_flag = KR_independence_war_overlord
		FROM = { set_country_flag = KR_independence_war }
	}
}

# Peace event for independence war
country_event = {
	id = kr.political.110
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.110" }
	title = kr.political.110.t
	desc = kr.political.110.d

	trigger = {
		has_war = yes
		has_country_flag = { flag = KR_independence_war days > 180 }
		surrender_progress < 0.10
		OR = {
			is_in_faction = no
			is_faction_leader = yes
		}
		any_enemy_country = {
			has_country_flag = KR_independence_war_overlord
			surrender_progress < 0.10
		}
	}

	mean_time_to_happen = {
		days = 30
	}

	option = {
		name = kr.political.110.a #Let's end this
		random_country = {
			limit = { has_country_flag = KR_independence_war_overlord }
			country_event = kr.political.111
		}
	}
	option = {
		name = kr.political.110.a #Fight on
		trigger = { is_ai = no }
		add_war_support = -0.10
	}
}

country_event = {
	id = kr.political.111
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.111" }
	title = kr.political.111.t
	desc = kr.political.111.d

	is_triggered_only = yes

	option = {
		name = kr.political.111.a #Let's end this
		add_political_power = -50
		FROM = { white_peace_with_ROOT = yes }
	}
	option = {
		name = kr.political.111.a #Fight on
		trigger = { is_ai = no }
		add_war_support = -0.10
	}
}


##################################
###   Demobilization Events    ###
##################################

# Check after a war whether we should be demobilizing
country_event = {
	id = kr.political.120
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.120" }

	hidden = yes
	is_triggered_only = yes

	trigger = {
		is_ai = yes
		has_war = no
		OR = {
			has_unsupported_economic_law_ai = yes
			has_unsupported_manpower_law_ai = yes
		}
		NOT = {
			has_global_flag = KR_no_demob
			any_other_country = {
				OR = {
					is_justifying_wargoal_against = ROOT
					has_wargoal_against = ROOT
					ROOT = { is_justifying_wargoal_against = PREV }
					ROOT = { has_wargoal_against = PREV }
				}
			}
		}
	}

	immediate = {
		clr_country_flag = has_demobilization_check
		if = {
			limit = {
				has_unsupported_economic_law_ai = yes
				has_unattained_important_goals = no
				OR = {
					has_elected_government = yes
					has_war_support < 0.25
				}
			}
			log = "               [Root.GetName]: is reducing its economy law due to demobilization"
			if = {
				limit = { has_idea = tot_economic_mobilisation }
				add_political_power = 200
			}
			else_if = {
				limit = { has_idea = war_economy }
				add_political_power = 150
			}
			else_if = {
				limit = { has_idea = partial_economic_mobilisation }
				add_political_power = 100
			}
			else = {
				add_political_power = 50
			}
			add_ideas = civilian_economy
		}
		else_if = {
			limit = {
				has_unsupported_economic_law_ai = yes
				has_unattained_important_goals = no
				has_war_support < 0.50
			}
			log = "               [Root.GetName]: is reducing its economy law due to demobilization"
			if = {
				limit = { has_idea = tot_economic_mobilisation }
				add_political_power = 150
			}
			else_if = {
				limit = { has_idea = war_economy }
				add_political_power = 100
			}
			else = {
				add_political_power = 50
			}
			add_ideas = low_economic_mobilisation
		}
		else_if = {
			limit = { has_unsupported_economic_law_ai = yes }
			log = "               [Root.GetName]: is reducing its economy law due to demobilization"
			if = {
				limit = { has_idea = tot_economic_mobilisation }
				add_political_power = 100
			}
			else = {
				add_political_power = 50
			}
			add_ideas = partial_economic_mobilisation
		}
		
		if = {
			limit = {
				has_unsupported_manpower_law_ai = yes
				has_unattained_important_goals = no
				OR = {
					has_war_support < 0.25
					has_government = social_liberal
					has_government = market_liberal
					AND = {
						has_government = social_democrat
						NOT = { has_country_flag = soc_dems_are_socialists }
					}
				}
			}
			log = "               [Root.GetName]: is reducing its conscription law due to demobilization"
			if = {
				limit = { has_idea = scraping_the_barrel }
				add_political_power = 250
			}
			else_if = {
				limit = { has_idea = all_adults_serve }
				add_political_power = 200
			}
			else_if = {
				limit = { has_idea = service_by_requirement }
				add_political_power = 150
			}
			else_if = {
				limit = { has_idea = extensive_conscription }
				add_political_power = 100
			}
			else = {
				add_political_power = 50
			}
			add_ideas = volunteer_only
		}
		else_if = {
			limit = {
				has_unsupported_manpower_law_ai = yes
				has_unattained_important_goals = no
				OR = {
					has_war_support < 0.50
					has_elected_government = yes
				}
			}
			log = "               [Root.GetName]: is reducing its conscription law due to demobilization"
			if = {
				limit = { has_idea = scraping_the_barrel }
				add_political_power = 200
			}
			else_if = {
				limit = { has_idea = all_adults_serve }
				add_political_power = 150
			}
			else_if = {
				limit = { has_idea = service_by_requirement }
				add_political_power = 100
			}
			else = {
				add_political_power = 50
			}
			add_ideas = limited_conscription
		}
		else_if = {
			limit = { has_unsupported_manpower_law_ai = yes }
			log = "               [Root.GetName]: is reducing its conscription law due to demobilization"
			if = {
				limit = { has_idea = scraping_the_barrel }
				add_political_power = 150
			}
			else_if = {
				limit = { has_idea = all_adults_serve }
				add_political_power = 100
			}
			else = {
				add_political_power = 50
			}
			add_ideas = extensive_conscription
		}
	
		if = {
			limit = {
				NOT = { has_country_flag = has_reduce_units_check }
			}
			set_country_flag = has_reduce_units_check
			country_event = { id = kr.political.121 days = 4 random = 96 }
		}	
	}
}

# Repeated check for whether an AI country should reduce its number of units
country_event = {
	id = kr.political.121
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.121" }

	hidden = yes
	is_triggered_only = yes

	immediate = {
		calculate_maximum_divisions = yes
		if = {
			limit = {
				is_ai = yes
				has_war = no
				num_divisions > 4
				OR = {
					has_excessive_army_size = yes
					needs_army_reduction_for_manpower = yes
					AND = {
						has_reached_maximum_divisions = yes
						NOT = { has_global_flag = KR_no_unit_limits }
					}
				}
				NOT = {
					any_other_country = {
						OR = {
							is_justifying_wargoal_against = ROOT
							has_wargoal_against = ROOT
							ROOT = { is_justifying_wargoal_against = PREV }
							ROOT = { has_wargoal_against = PREV }
						}
					}
				}
			}
			log = "               [Root.GetName]: is disbanding 20% of its units due to demobilization"
			disband_twenty_percent_units = yes
			country_event = { id = kr.political.121 days = 7 random = 72 }
		}
		else = {
			clr_country_flag = has_reduce_units_check
		}
	}
}

# Check whether a player should have mobilisation penalties
country_event = {
	id = kr.political.122
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.122" }

	hidden = yes
	is_triggered_only = yes

	trigger = {
		is_ai = no
		has_reached_maximum_divisions = yes
		NOT = {
			has_global_flag = KR_no_unit_limits
			has_global_flag = KR_unit_limits_ai_only
			has_dynamic_modifier = { modifier = mobilisation_penalty_modifier }
		}
	}

	option = {
		calculate_mobilisation_penalty = yes
		add_dynamic_modifier = { modifier = mobilisation_penalty_modifier }
		country_event = { id = kr.political.123 days = 7 }
	}
}

# Check whether a player should still have mobilisation penalties
country_event = {
	id = kr.political.123
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.123" }

	hidden = yes
	is_triggered_only = yes

	trigger = {
		has_dynamic_modifier = { modifier = mobilisation_penalty_modifier }
	}
	
	immediate = {
		country_event = { id = kr.political.123 days = 7 }
	}

	option = {
		if = {
			limit = {
				OR = {
					is_ai = yes
					has_reached_maximum_divisions = no
				}
			}
			clear_variable = mobilisation_penalty_var
			clear_variable = mobilisation_penalty_var_positive
			remove_dynamic_modifier = { modifier = mobilisation_penalty_modifier }
		}
		else = {
			calculate_maximum_divisions = yes
			calculate_mobilisation_penalty = yes
		}
	}
}

##################################
###     White Peace Events     ###
##################################

# Error checking to make sure subordinate countries peace out with the target
country_event = {
	id = kr.political.205

	hidden = yes
	is_triggered_only = yes

	trigger = {
		has_war_with = FROM
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.205"
		white_peace = FROM
	}
}

country_event = {
	id = kr.political.206

	hidden = yes
	is_triggered_only = yes

	trigger = {
		has_war_with = event_target:peace_country
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.206"
		white_peace = event_target:peace_country
	}
}

country_event = {
	id = kr.political.207

	hidden = yes
	is_triggered_only = yes

	trigger = {
		has_war_with = event_target:white_peace_receiver
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.207"
		white_peace = event_target:white_peace_receiver
	}
}

country_event = {
	id = kr.political.208

	hidden = yes
	is_triggered_only = yes

	trigger = {
		event_target:factionhead = { is_faction_leader = yes }
		is_in_faction = no
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.208"
		set_global_flag = TEMPORARY_DISABLED_FACTION_POPUP
		event_target:factionhead = { add_to_faction = ROOT }
	}
}

# Dynamically add operative nationalities
country_event = {
	id = kr.political.209

	hidden = yes
	is_triggered_only = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.209"
		every_country = {
			limit = { has_intelligence_agency = yes }
			every_operative = { add_operative_nationalities = yes }
		}
	}
}


