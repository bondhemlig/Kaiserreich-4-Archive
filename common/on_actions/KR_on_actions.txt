on_actions = {
	on_startup = {
		effect = {
			#Opinion Modifiers Setup
			every_country = { country_event = kr.political.40 }
			#Intro Event
			every_country = {
				limit = { is_ai = no }
				country_event = kr.political.24
			}
			#Faction Opinion Modifiers
			every_country = {
				limit = {
					OR = {
						is_in_faction_with = GER
						is_subject_of = GER
					}
				}
				country_event = kr.political.50
			}
			every_country = {
				limit = {
					is_in_faction_with = CAN
				}
				country_event = kr.political.52
			}
			every_country = {
				limit = {
					is_in_faction_with = FRA
				}
				country_event = kr.political.54
			}
		}
	}

	#ROOT is subject FROM is previous overlord
	on_subject_free = {
		effect = {
			clr_country_flag = KR_can_raise_autonomy_level
			clr_country_flag = KR_can_lower_autonomy_level
			clr_country_flag = KR_can_be_annexed
			clr_country_flag = KR_can_become_free
		}
	}

	#ROOT is subject FROM is overlord
	on_subject_autonomy_level_change = {
		effect = {
			clr_country_flag = KR_can_raise_autonomy_level
			clr_country_flag = KR_can_lower_autonomy_level
		}
	}

	#ROOT is subject FROM is overlord
	on_subject_annexed = {
		effect = {
			clr_country_flag = KR_can_raise_autonomy_level
			clr_country_flag = KR_can_lower_autonomy_level
			clr_country_flag = KR_can_be_annexed
			clr_country_flag = KR_can_become_free
		}
	}

	#ROOT is winner #FROM gets annexed - For civil wars on_civil_war_end is also fired
	on_annex = {
		effect = {
			FROM = {
				clr_country_flag = KR_can_raise_autonomy_level
				clr_country_flag = KR_can_lower_autonomy_level
				clr_country_flag = KR_can_be_annexed
				clr_country_flag = KR_can_become_free
			}
		}
	}

	#PREV is war target
	on_declare_war = {
		effect = {
			FROM = { set_country_flag = had_war }
			ROOT = { set_country_flag = had_war }
		}
	}


	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		effect = {
			news_event = { id = country_capitulated.0 days = 0 }
		}
	}

	on_leave_faction = {
		effect = {
			FROM = {
				add_opinion_modifier = {
					modifier = faction_traitor
					target = ROOT
					days = 365
				}

				add_opinion_modifier = {
					modifier = faction_traitor_trade
					target = ROOT
					days = 365
				}
			}
		}
	}

	#FROM is state #ROOT is broken as hell
	on_nuke_drop = {

		effect = {
			news_event = { id = nuke_dropped.2 days = 1}
			news_event = { id = nuke_dropped.3 days = 1}
			news_event = { id = nuke_dropped.4 days = 1}
			news_event = { id = nuke_dropped.5 days = 1}
			news_event = { id = nuke_dropped.6 days = 1}
			news_event = { id = nuke_dropped.7 days = 1}
			news_event = { id = nuke_dropped.8 days = 1}
			news_event = { id = nuke_dropped.9 days = 1}
			news_event = { id = nuke_dropped.10 days = 1}
			news_event = { id = nuke_dropped.11 days = 1}
			news_event = { id = nuke_dropped.12 days = 1}
			news_event = { id = nuke_dropped.13 days = 1}
			news_event = { id = nuke_dropped.14 days = 1}
			news_event = { id = nuke_dropped.15 days = 1}
		}
		random_events = {
			100 = nuke_dropped.0
		}
	}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
		random_events = {
			100 = ace_promoted.1
			5 = ace_promoted.2
		}
	}

	# country, FROM = ace, PREV = enemy ace
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
		random_events = {
			100 = aces_killed_each_other.1
		}
	}

	# country, FROM = our ace,
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
		random_events = {
			100 = ace_killed_by_ace.1
		}
	}

	# country, FROM = our ace,
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
		random_events = {
			100 = ace_killed_other_ace.1
		}
	}

	# country, FROM = ace
	on_ace_killed = {
		random_events = {
			100 = ace_died.1
		}
	}

	on_new_term_election = {
		effect = {
			### Albania ###
			if = {
				limit = { tag = ALB }
				country_event = { id = albania.3 }
				country_event = { id = albania.30 }
			}
			### Australasia ###
			if = {
				limit = { tag = AST }
				country_event = { id = austral.10 }
				country_event = { id = austral.50 }
				country_event = { id = austral.53 }
			}
			### Austria ###
			if = {
				limit = { tag = AUS }
				country_event = { id = aus.elections.100 }
			}
			### Flanders ###
			if = {
				limit = { tag = FLN }
				country_event = { id = fln.101 }
			}
			### Wallonia ###
			if = {
				limit = { tag = WLL }
				country_event = { id = wll.718 }
			}
			### Belgium ###
			if = {
				limit = { tag = BEL}
				country_event = { id = bel.1000 }
				country_event = { id = bel.1001 }
				country_event = { id = belind.14 }
			}
			### Liberia ###
			if = {
				limit = { tag = LBR }
				country_event = { id = LBR.3 }
			}
			### Netherlands ###
			if = {
				limit = { tag = HOL }
				country_event = { id = hol.5 }
			}
			### Norway ###
			if = {
				limit = { tag = NOR }
				country_event = { id = norway.14 }
				country_event = { id = norway.30 }
				country_event = { id = norway.33 }
			}
			### Poland ###
			if = {
				limit = { tag = POL }
				country_event = { id = poland.45 }
				country_event = { id = poland.46 }
				country_event = { id = poland.47 }
				country_event = { id = poland.48 }
				country_event = { id = poland.49 }
			}
			### Scandinavia ###
			if = {
				limit = { tag = SCA }
				country_event = { id = scandinavia.3 }
				country_event = { id = scandinavia.7 }
				country_event = { id = scandinavia.11 }
			}
			### Serbia ###
			if = {
				limit = { tag = SER }
				country_event = { id = serbia.6 }
				country_event = { id = serbia.7 }
				country_event = { id = serbia.8 }
				country_event = { id = serbia.9 }
			}
			### South Africa ###
			if = {
				limit = { tag = SAF }
				country_event = { id = saf.26 }
				country_event = { id = saf.90 }
				country_event = { id = saf.91 }
				country_event = { id = saf.93 }
			}
			### Switzerland ###
			if = {
				limit = { tag = SWI }
				country_event = { id = swiss.51 }
			}
			### Republic of Italy ###
			if = {
				limit = { tag = ITA	}
				country_event = { id = ita.12 }
				country_event = { id = ita.19 }
				country_event = { id = ita.20 }
			}
			### Egypt ###
			if = {
				limit = { tag = EGY }
				country_event = { id = egy.5 }
				country_event = { id = egy.6 }
				country_event = { id = egy.137 }
				country_event = { id = egy.138 }
			}
			### Two Sicilies ###
			if = {
				limit = { tag = SIC }
				country_event = { id = sic.10 }
				country_event = { id = sic.11 }
			}
			### Sardinia ###
			if = {
				limit = { tag = SRD }
				country_event = { id = srd.29 }
				country_event = { id = srd.30 }
			}
		}
	}
	
	on_army_leader_daily = {
		effect = {
			if = {
				limit = {
					check_variable = { random < 0.02 }
					NOT = { has_trait = sick }
					set_temp_variable = { temp = sum_unit_terrain_modifier@sickness_chance }
					divide_temp_variable = { temp = num_units }
					check_variable = { temp > 0.75 }
					NOT = { has_unit_leader_flag = recently_sick }
				}
				add_timed_unit_leader_trait = {
					trait = sick
					days = 30
				}
				unit_leader_event = { id = unit_leader.1 }
			}
		}
	}
	
	# From is owner country
	on_army_leader_won_combat = {
		effect = {
			if = {
				limit = {
					set_temp_variable = { chance = 0.001 }
					set_temp_variable = { factor = 1.0 }
					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor } 
					multiply_temp_variable = { chance = factor }
					check_variable = { random < chance }
					NOT = { has_trait = wounded }
				}
				add_timed_unit_leader_trait = {
					trait = wounded
					days = 90
				}
				unit_leader_event = { id = unit_leader.2 }
			}
		}
	}
	
	# From is owner country
	on_army_leader_lost_combat = {
		effect = {
			if = {
				limit = {
					set_temp_variable = { chance = 0.005 }
					set_temp_variable = { factor = 1.0 }
					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor } 
					multiply_temp_variable = { chance = factor }
					check_variable = { random < chance }
					NOT = { has_trait = wounded }
				}
				add_timed_unit_leader_trait = {
					trait = wounded
					days = 90
				}
				unit_leader_event = { id = unit_leader.2 }
			}
		}
	}
	
	on_army_leader_promoted = {
		effect = {
			add_timed_unit_leader_trait = {
				trait = recently_promoted
				days = 100
			}
		}
	}
}